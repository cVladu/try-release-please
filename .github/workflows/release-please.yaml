on:
  push:
    branches:
      - main
      - 'release/*'
name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          target-branch: ${{ github.ref_name }}
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
      - name: tag global major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/googleapis/release-please-action.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
      - name: tag component major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/github-script@v7
        env:
          release_output: ${{ toJSON(steps.release.outputs) }}
        with:
          result-encoding: string
          script: |
            await exec.exec('git config user.name github-actions[bot]')
            await exec.exec('git config user.email 41898282+github-actions[bot]@users.noreply.github.com')
            
            const outputs = JSON.parse(process.env.release_output);
            // for some reason pathsReleased is a string and not an array within the JSON
            const pathsReleased = JSON.parse(outputs.paths_released);
            for (let i = 0; i < pathsReleased.length; i++) {
              let releasePath = pathsReleased[i];
              if (releasePath === ".") {
                    // ignore root package
                    continue;
              }
              const major = outputs[`${releasePath}--major`];
              const minor = outputs[`${releasePath}--minor`];
              const package_name = outputs[`${releasePath}--name`].split(":")[0];
              
              console.log(`Creating ${major}.${minor} releases for ${package_name}`);

              const cmdOpts = {
                ignoreReturnCode: true
              };
              await exec.exec('git', ["tag", "-d", `${package_name}-v${major}`], cmdOpts);
              await exec.exec('git', ["tag", "-d", `${package_name}-v${major}.${minor}`], cmdOpts);
              await exec.exec('git', ["push", "origin", `:${package_name}-v${major}`], cmdOpts)
              await exec.exec('git', ["push", "origin", `:${package_name}-v${major}.${minor}`], cmdOpts)
              await exec.exec('git', ["tag", "-a", `${package_name}-v${major}`, "-m", `Release v${major} for ${package_name}`])
              await exec.exec('git', ["tag", "-a", `${package_name}-v${major}.${minor}`, "-m", `Release v${major}.${minor} for ${package_name}`])
              await exec.exec('git', ["push", "origin", `${package_name}-v${major}`])
              await exec.exec('git', ["push", "origin", `${package_name}-v${major}.${minor}`])
            }
